{"version":3,"sources":["logo.png","Globalwarmingpic.png","Glacierpic.png","CO2pic.png","Polarbearchart.png","Components/Navbar.jsx","sections/Home.jsx","Components/GlobalChart.jsx","Components/GlobalWarmingButton.jsx","sections/GlobalWarming.jsx","Components/GlacierChart.jsx","Components/GlacierSizeButton.jsx","sections/GlacierSize.jsx","Components/CO2chart.jsx","Components/CO2button.jsx","sections/CO2Emission.jsx","quizService/index.js","Components/QuestionBox.jsx","Components/Result.jsx","Quiz.js","StartQuizButton.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","scrollToTop","scroll","className","id","src","logo","alt","onClick","this","activeClass","to","spy","smooth","offset","duration","Component","Home","state","GlobalChart","dataGlobal","props","GlobalEmission","undefined","Fragment","width","height","data","dataKey","strokeDasharray","type","name","stroke","activeDot","r","GlobalWarmingButton","toggleModal","setState","isActive","indexYear","fetch","response","json","sort","a","b","Year","Modal","setAppElement","isOpen","onRequestClose","style","textAlign","onYearFilter","handleYearFilter","AOS","init","GlobalWarming","CO2Emission","index","findIndex","co2","parseInt","alert","data-aos","data-aos-duration","data-aos-delay","Globalwarmingpic","GlacierChart","dataGlacier","GlacierEmission","GlacierSizeButton","GlacierSize","Glacierpic","CO2chart","handleYear","e","key","chartName","target","value","console","log","Co2Emission","dataPieChart","COLORS","placeholder","onKeyDown","onMouseEnter","onPieEnter","cx","cy","outerRadius","fill","label","layout","CO2button","indexYear1","indexYear2","marginTop","Polarbearchart","role","class","CO2pic","qBank","question","answers","correct","questionId","n","Promise","resolve","Math","random","slice","QuestionBox","options","selected","useState","answer","setAnswer","map","text","Result","score","playAgain","Quiz","questionBank","responses","getQuestions","quizService","then","computeAnswer","correctAnswer","length","questionID","ReactDOM","render","document","getElementById","StartQuizButton","showMe","operation","App","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ba59f65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5b97d1cd.png\";","module.exports = __webpack_public_path__ + \"static/media/Globalwarmingpic.074a57a7.png\";","module.exports = __webpack_public_path__ + \"static/media/Glacierpic.d7275976.png\";","module.exports = __webpack_public_path__ + \"static/media/CO2pic.43b7121a.png\";","module.exports = __webpack_public_path__ + \"static/media/Polarbearchart.db6b43bb.png\";","import React, { Component } from \"react\";\r\n//import { Link } from \"react-scroll\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\nimport logo from \"../logo.png\";\r\n\r\nclass Navbar extends Component {\r\n  scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\" id=\"navbar\">\r\n        <img\r\n          src={logo}\r\n          className=\"nav-logo\"\r\n          alt=\"Logo\"\r\n          onClick={this.scrollToTop}\r\n        />\r\n        <div className=\"nav-content\">\r\n          <ul>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"GlobalWarming\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n              >\r\n                Global Warming\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"GlacierEmission\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n              >\r\n                Glacier Size\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"CO2Emission\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n              >\r\n                CO2Emission\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item2\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"Quiz-section2\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n              >\r\n                Quiz\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n  render() {\r\n    return <div className=\"Home-section\" id=\"Home\"></div>;\r\n  }\r\n}\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nclass GlobalChart extends Component {\r\n  render() {\r\n    let dataGlobal = this.props.GlobalEmission;\r\n    if (dataGlobal === undefined) return <p>There is no data </p>;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"grafstil3\">\r\n          <LineChart width={700} height={420} data={dataGlobal}>\r\n            <XAxis dataKey=\"Year\" />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"Mean\"\r\n              name=\"Average temperature (°C)\"\r\n              stroke=\"#31a196\"\r\n              activeDot={{ r: 8 }}\r\n            />\r\n          </LineChart>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalChart;\r\n","import React, { Component } from \"react\";\r\nimport GlobalChart from \"./GlobalChart\";\r\nimport Modal from \"react-modal\";\r\nclass GlobalWarmingButton extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      GlobalEmission: [],\r\n      indexYear: 250,\r\n      isActive: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://my.api.mockaroo.com/temp.json?key=8eb9e6f0\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    this.setState({\r\n      GlobalEmission: data.sort((a, b) =>\r\n        a.Year > b.Year ? 1 : b.Year > a.Year ? -1 : 0\r\n      )\r\n    });\r\n  }\r\n\r\n  componentWillMount() {\r\n    Modal.setAppElement(\"body\");\r\n  }\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <button className=\"diagramknapp\" onClick={this.toggleModal}>\r\n          Show the graph!\r\n        </button>\r\n\r\n        <Modal isOpen={this.state.isActive} onRequestClose={this.toggleModal}>\r\n          <button className=\"closebutton\" onClick={this.toggleModal}></button>\r\n          <div className=\"container\">\r\n            <h1 style={{ textAlign: \"center\" }}> Global Temperature Graph</h1>\r\n            <div className=\"ChartAndText\">\r\n              <p className=\"GlobalChartInfo\">\r\n                The graph is showing how the average global <br></br>{\" \"}\r\n                temperature has changed from 1880 to 2016.\r\n                <br></br>As you can see, it keeps getting warmer.\r\n              </p>\r\n              <div className=\"globalparent\">\r\n                <div className=\"GlobalChart\">\r\n                  <GlobalChart\r\n                    GlobalEmission={this.state.GlobalEmission}\r\n                    onYearFilter={this.handleYearFilter}\r\n                  ></GlobalChart>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalWarmingButton;\r\n","import React, { Component } from \"react\";\r\nimport Globalwarmingpic from \"../Globalwarmingpic.png\";\r\nimport GlobalWarmingButton from \"../Components/GlobalWarmingButton\";\r\nimport AOS from \"aos\";\r\nimport \"../aos.css\";\r\n\r\nAOS.init();\r\n\r\nclass GlobalWarming extends Component {\r\n  state = {\r\n    CO2Emission: [],\r\n    indexYear: 0\r\n  };\r\n  async componentDidMount() {\r\n    const url = \"https://my.api.mockaroo.com/co2.json?key=8eb9e6f0\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    this.setState({ CO2Emission: data });\r\n  }\r\n  handleYearFilter = Year => {\r\n    let index = this.state.CO2Emission.findIndex(\r\n      co2 => co2.Year === parseInt(Year)\r\n    );\r\n    if (index !== -1) {\r\n      this.setState({ indexYear: index });\r\n    } else {\r\n      alert(\"Year could not be found in data\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"Warming-section\"\r\n        id=\"GlobalWarming\"\r\n        data-aos=\"fade\"\r\n        data-aos-duration=\"1500\"\r\n        data-aos-delay=\"40\"\r\n      >\r\n        <img\r\n          src={Globalwarmingpic}\r\n          id=\"Globalbild\"\r\n          alt=\"Bild om global uppvärmning\"\r\n        />\r\n        <h2 id=\"warmingheading\">Global Warming </h2>\r\n        <p id=\"warmingtext\">\r\n          <h3>How much do you know about global warming?</h3>\r\n          <span className=\"ItalicText\">\r\n            Read the text and points below to refresh your knowledge or to learn\r\n            something new!\r\n          </span>\r\n          <br></br>\r\n          Global warming means just what it says, the weather is getting warmer.\r\n          With warmer weather and higher temperature comes risks, such as\r\n          glaciers starting to melt, and sea levels getting higher.\r\n          <h3>But what causes global warming then?</h3>\r\n          Several things are causing the temperature to rise, but some of them\r\n          are extra bad. The most known thing to cause global warming is the CO2\r\n          emissions. CO2 emissions come from the use of fossil fuels such as the\r\n          fuel we use for vehicles with engines. There is also a lot of\r\n          emissions from the clothing industry, everyday products and food\r\n          items. Many of the factories all over the world need to make products,\r\n          clothes and food healthy for us to use. Therefore they are using\r\n          methods that causes emissions.\r\n          <h3>What can YOU do to stop global warming?</h3>\r\n          You can do alot of stuff, see the list below to see how!\r\n          <ul>\r\n            <li> Walk or take the bike instead of the car</li>\r\n            <li> Eat less meat and start to eat more vegetarian foods</li>\r\n            <li> Stop buying things you don’t really need </li>\r\n            <li>\r\n              {\" \"}\r\n              Inform all your friends and family about this! <span>😊</span>\r\n            </li>\r\n          </ul>\r\n        </p>\r\n        <GlobalWarmingButton></GlobalWarmingButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GlobalWarming;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nclass GlacierChart extends Component {\r\n  render() {\r\n    let dataGlacier = this.props.GlacierEmission;\r\n    if (dataGlacier === undefined) return <p>There is no data </p>;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"grafstil3\">\r\n          <LineChart width={700} height={420} data={dataGlacier}>\r\n            <XAxis dataKey=\"Year\" />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"Mean cumulative mass balance\"\r\n              name=\"The mass balance of glaciers (km3)\"\r\n              stroke=\"#31a196\"\r\n              activeDot={{ r: 8 }}\r\n            />\r\n          </LineChart>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlacierChart;\r\n","import React, { Component } from \"react\";\r\nimport GlacierChart from \"./GlacierChart\";\r\n/*import \"semantic-ui-css/semantic.min.css\";*/\r\nimport Modal from \"react-modal\";\r\n\r\nclass GlacierSizeButton extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      GlacierEmission: [],\r\n      isActive: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://my.api.mockaroo.com/glaciersize.json?key=8eb9e6f0\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    this.setState({ GlacierEmission: data });\r\n  }\r\n  componentWillMount() {\r\n    Modal.setAppElement(\"body\");\r\n  }\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <button className=\"diagramknapp\" onClick={this.toggleModal}>\r\n          Show the graph!\r\n        </button>\r\n\r\n        <Modal isOpen={this.state.isActive} onRequestClose={this.toggleModal}>\r\n          <button className=\"closebutton\" onClick={this.toggleModal}></button>\r\n          <div className=\"container\">\r\n            <h1 style={{ textAlign: \"center\" }}> Glacier Size Graph</h1>\r\n            <p className=\"GlacierChartInfo\">\r\n              The graph is showing how the mass of glaciers <br></br> has\r\n              changed from 1945 to 2014.\r\n              <br></br>As you can see, the mass has decreased with over 28 km3\r\n              over these years. <br></br> This is because of the increasing\r\n              global temperatures.\r\n            </p>\r\n\r\n            <div className=\"glacierparent\">\r\n              <div className=\"GlacierChart\">\r\n                <GlacierChart\r\n                  GlacierEmission={this.state.GlacierEmission}\r\n                ></GlacierChart>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlacierSizeButton;\r\n","import React, { Component } from \"react\";\r\nimport Glacierpic from \"../Glacierpic.png\";\r\nimport GlacierSizeButton from \"../Components/GlacierSizeButton\";\r\nimport AOS from \"aos\";\r\nimport \"../aos.css\";\r\n\r\nAOS.init();\r\n\r\nclass GlacierSize extends Component {\r\n  state = {\r\n    GlacierEmission: [],\r\n    indexYear: 0\r\n  };\r\n  async componentDidMount() {\r\n    const url = \"https://my.api.mockaroo.com/co2.json?key=8eb9e6f0\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    this.setState({ GlacierEmission: data });\r\n  }\r\n  handleYearFilter = Year => {\r\n    let index = this.state.GlacierEmission.findIndex(\r\n      co2 => co2.Year === parseInt(Year)\r\n    );\r\n    if (index !== -1) {\r\n      this.setState({ indexYear: index });\r\n    } else {\r\n      alert(\"Year could not be found in data\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"Glacier-section\"\r\n        id=\"GlacierEmission\"\r\n        data-aos=\"fade\"\r\n        data-aos-duration=\"1500\"\r\n        data-aos-delay=\"40\"\r\n      >\r\n        <img src={Glacierpic} id=\"Glacierpicture\" alt=\"Glacier melting\" />\r\n        <div className=\"GlacierTextSection\">\r\n          <h2 id=\"glacierHeading\"> Glacier size</h2>\r\n          <p id=\"glacierText\">\r\n            <span className=\"ItalicText\">\r\n              Like we told you before there are some risks with global warming.\r\n              A major risk with global warming is that glaciers starts to melt.\r\n            </span>\r\n            <h3>How does this affect me then?</h3>\r\n            Think about this; when glaciers melt, the sea level increases. This\r\n            means that the ground you are standing on might be covered in water\r\n            if the sea level gets even higher than it is. In a near future it is\r\n            possible that many cities close to the sea will be under water if we\r\n            don’t make the temperature decrease!\r\n            <h3>Think about the animals, what happens to them?</h3>\r\n            It is not only humans that will be affected by the decreasing\r\n            glacier sizes. Our planet consists of millions of animals. They will\r\n            of course also be affected. Most animals that live close to the sea,\r\n            or for example polar bears that spend most of their time on the ice,\r\n            will be forced to get into the water when the ice melts.\r\n            <h3>Can´t we just move to another place?</h3>\r\n            <p id=\"glacierText\">\r\n              Yes, you can move, but this doesn’t mean that you are the only\r\n              one. If a lot of people need to move from their homes, other\r\n              places will be overpopulated. When a place gets overpopulated it\r\n              means that there are to many people on the same place.\r\n            </p>\r\n          </p>\r\n\r\n          <div className=\"GlacierButton\">\r\n            <GlacierSizeButton></GlacierSizeButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GlacierSize;\r\n","import React, { Component } from \"react\";\r\nimport { PieChart, Pie, Legend, Cell, Tooltip } from \"recharts\";\r\nclass CO2chart extends Component {\r\n  handleYear = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.props.onYearFilter(this.props.chartName, e.target.value);\r\n      console.log(e.target.value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let co2 = this.props.Co2Emission;\r\n    if (co2 === undefined) return <p>there is no data.</p>;\r\n    const dataPieChart = [\r\n      { name: \"Gas Fuel\", value: co2[\"Gas Fuel\"] },\r\n      { name: \"Liquid Fuel\", value: co2[\"Liquid Fuel\"] },\r\n      { name: \"Solid Fuel\", value: co2[\"Solid Fuel\"] },\r\n      { name: \"Cement\", value: co2[\"Cement\"] }\r\n    ];\r\n    const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n\r\n    console.log(co2);\r\n\r\n    return (\r\n      <div className=\"grafstil\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Year...\"\r\n          onKeyDown={e => this.handleYear(e)}\r\n        ></input>\r\n        <PieChart width={160} height={220} onMouseEnter={this.onPieEnter}>\r\n          {\" \"}\r\n          <Pie\r\n            data={dataPieChart}\r\n            dataKey=\"value\"\r\n            cx={50}\r\n            cy={50}\r\n            outerRadius={50}\r\n            fill=\"#8884d8\"\r\n            label\r\n          >\r\n            {\" \"}\r\n            <Cell fill={COLORS[0]} /> <Cell fill={COLORS[1]} />{\" \"}\r\n            <Cell fill={COLORS[2]} /> <Cell fill={COLORS[3]} />{\" \"}\r\n          </Pie>{\" \"}\r\n          <Tooltip />\r\n          <Legend layout=\"horizontal\"></Legend>\r\n        </PieChart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CO2chart;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport Polarbearchart from \"../Polarbearchart.png\";\r\nimport CO2chart from \"./CO2chart\";\r\nclass CO2button extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      Co2Emission: [],\r\n      indexYear1: 0,\r\n      indexYear2: 0,\r\n      isActive: false\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    Modal.setAppElement(\"body\");\r\n  }\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://my.api.mockaroo.com/co2.json?key=8eb9e6f0\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    this.setState({ Co2Emission: data });\r\n  }\r\n  handleYearFilter = (chartName, Year) => {\r\n    let index = this.state.Co2Emission.findIndex(\r\n      co2 => co2.Year === parseInt(Year)\r\n    );\r\n\r\n    if (index !== -1) {\r\n      switch (chartName) {\r\n        case \"Pie1\":\r\n          this.setState({ indexYear1: index });\r\n          break;\r\n        case \"Pie2\":\r\n          this.setState({ indexYear2: index });\r\n          break;\r\n      }\r\n    } else {\r\n      alert(\"Year could not be found in data\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Graphpage\">\r\n        <button\r\n          className=\"diagramknapp\"\r\n          onClick={this.toggleModal}\r\n          style={{ marginTop: \"70px\" }}\r\n        >\r\n          Show the graph!\r\n        </button>\r\n        <Modal isOpen={this.state.isActive} onRequestClose={this.toggleModal}>\r\n          <button className=\"closebutton\" onClick={this.toggleModal}></button>\r\n          <h1 style={{ textAlign: \"center\" }}>CO2 Emission graph</h1>\r\n\r\n          <div className=\"Polarbearchart\">\r\n            {\" \"}\r\n            <img src={Polarbearchart} alt=\"Polarbear with chart\" />\r\n          </div>\r\n          <h2 className=\"howtouse\">How to use:</h2>\r\n          <p className=\"howtograph\">\r\n            The pie chart describes{\" \"}\r\n            <span className=\"boldtext\">\r\n              how much carbon dioxide is released in the atmosphere for each\r\n              year.\r\n            </span>\r\n            Think of slicing a cake, every piece is of different size. The\r\n            diagram then shows how big every size is. The pieces in the chart\r\n            consists of Gas fuel, Liquid fuel, Solid fuel and Cement. Follow the\r\n            steps below! There are two different charts where you can compare\r\n            CO2 emission changes between the years.\r\n            <br></br>\r\n            <div role=\"list\" class=\"ui ordered list\">\r\n              {\" \"}\r\n              <li class=\"item\">\r\n                <span className=\"boldtext\">\r\n                  Write a year in the search box, then click the enter button.\r\n                </span>\r\n              </li>{\" \"}\r\n              <li class=\"item\">\r\n                <span className=\"boldtext\">\r\n                  {\" \"}\r\n                  The chart will show different pieces with different amounts of\r\n                  Co2 commission.\r\n                </span>\r\n              </li>{\" \"}\r\n              <li class=\"item\">\r\n                <span className=\"boldtext\">\r\n                  {\" \"}\r\n                  Every colour contains a single piece in the chart.\r\n                </span>\r\n              </li>{\" \"}\r\n              <li class=\"item\">\r\n                <span className=\"boldtext\">\r\n                  {\" \"}\r\n                  The value in the pie chart is ton.\r\n                </span>\r\n              </li>\r\n            </div>\r\n          </p>\r\n          <co2chart>\r\n            <CO2chart\r\n              chartName=\"Pie1\"\r\n              Co2Emission={this.state.Co2Emission[this.state.indexYear1]}\r\n              onYearFilter={this.handleYearFilter}\r\n            ></CO2chart>\r\n\r\n            <CO2chart\r\n              chartName=\"Pie2\"\r\n              Co2Emission={this.state.Co2Emission[this.state.indexYear2]}\r\n              onYearFilter={this.handleYearFilter}\r\n            ></CO2chart>\r\n          </co2chart>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CO2button;\r\n","import React, { Component } from \"react\";\r\nimport CO2pic from \"../CO2pic.png\";\r\nimport CO2button from \"../Components/CO2button\";\r\nimport AOS from \"aos\";\r\nimport \"../aos.css\";\r\n\r\nAOS.init();\r\n\r\nclass CO2Emission extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"CO2-section\"\r\n        id=\"CO2Emission\"\r\n        data-aos=\"fade\"\r\n        data-aos-duration=\"1500\"\r\n        data-aos-delay=\"40\"\r\n      >\r\n        <img src={CO2pic} id=\"CO2Bild\" alt=\"Fossil fuel pic\" />\r\n        <h2 id=\"CO2heading\">Global CO2 emissions from fossil fuels</h2>\r\n        <p id=\"CO2text\">\r\n          Like we told you before CO2 emissions comes from fossil fuels which\r\n          can be used when driving cars, producing food and other products. But\r\n          fossil fuels are more than that. Fossil fuels includes things like\r\n          oil, coal and natural gas. When we use these fuels to build, produce\r\n          and drive we cause CO2 emissions. <br></br>\r\n          <h3>What is negative about CO2 emissions?</h3>\r\n          The climate and nature don’t like CO2 emissions. When the air we\r\n          breathe and the water we drink, or swim in, contains to much CO2\r\n          emissions it affects humans and natures health. It also increases the\r\n          global warming which might get the earth flooded since the glaciers\r\n          are melting.\r\n          <h3>How can I make a difference?</h3>\r\n          <ul>\r\n            <li>\r\n              Recycle; if you buy a plastic bottle, don’t throw it in the\r\n              nature, make sure to put it in a trashcan so it can be recycled\r\n              into a new bottle!\r\n            </li>\r\n            <li>\r\n              Use electricity; if your parents happen to buy a new car, tell\r\n              them to buy an electric car, this is much better because it\r\n              doesn’t use fossil fuels to be able to drive.\r\n            </li>\r\n            <li>\r\n              Spend more time making your own healthy food and toys instead of\r\n              letting factories produce all of it for you!\r\n            </li>\r\n          </ul>\r\n        </p>\r\n\r\n        <CO2button></CO2button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CO2Emission;\r\n","const qBank = [\r\n  {\r\n    question: \"How does emissions from fossil fuels affect lakes?   \",\r\n    answers: [\r\n      \"They get warmer\",\r\n      \"They get sour from acidification\",\r\n      \"They get dirty\",\r\n      \"No affect\"\r\n    ],\r\n    correct: \"They get sour from acidification\",\r\n    questionId: \"099099\"\r\n  },\r\n  {\r\n    question:\r\n      \"By which year at the latest do we need to stop using all fossil fuels to avoid a global catastrophe? \",\r\n    answers: [\"2030\", \"2040\", \"2050\", \"2060\"],\r\n    correct: \"2050\",\r\n    questionId: \"183452\"\r\n  },\r\n  {\r\n    question: \"Which of the following risk is the biggest from global warming?\",\r\n    answers: [\r\n      \"The light gets brighter outside\",\r\n      \"Animals need more water\",\r\n      \"Glaciers starts to melt\",\r\n      \"No risk\"\r\n    ],\r\n    correct: \"Glaciers starts to melt\",\r\n    questionId: \"267908\"\r\n  },\r\n  {\r\n    question: \"What happens with the sea when glaciers are melting? \",\r\n    answers: [\r\n      \"It gets colder\",\r\n      \"The water level increases\",\r\n      \"The sea gets polluted\",\r\n      \"It gets more ice\"\r\n    ],\r\n    correct: \"The water level increases\",\r\n    questionId: \"333247\"\r\n  },\r\n  {\r\n    question: \"What can you do to prevent global warming? \",\r\n    answers: [\r\n      \"Drive electric vehicles\",\r\n      \"Eat more Meat\",\r\n      \"Use more fossil fuels\",\r\n      \"Nothing\"\r\n    ],\r\n    correct: \"Drive electric vehicles\",\r\n    questionId: \"496293\"\r\n  },\r\n  {\r\n    question: \"How does emissions from fossil fuels affect the air? \",\r\n    answers: [\r\n      \"The air gets cleaner\",\r\n      \"The air gets polluted\",\r\n      \"The air destroys our houses\",\r\n      \"It gets colder\"\r\n    ],\r\n    correct: \"The air gets polluted\",\r\n    questionId: \"588909\"\r\n  },\r\n  {\r\n    question:\r\n      \"What can happen with different countries because of the high sea level? \",\r\n    answers: [\r\n      \"They get overpopulated\",\r\n      \"They get more lakes from the increase of water\",\r\n      \"They need to build more towers\",\r\n      \"Nothing\"\r\n    ],\r\n    correct: \"They get overpopulated\",\r\n    questionId: \"648452\"\r\n  },\r\n  {\r\n    question: \"Why should you recycle plastic and clothes? \",\r\n    answers: [\r\n      \"Because you can buy more stuff\",\r\n      \"It stops the manufacturing that causes emissions\",\r\n      \"It is dangerous to wear the same clothes for a long time\",\r\n      \"It is good for the retailers\"\r\n    ],\r\n    correct: \"It stops the manufacturing that causes emissions\",\r\n    questionId: \"786649\"\r\n  },\r\n  {\r\n    question:\r\n      \"How can animals get affected by the global warming and melting of glaciers? \",\r\n    answers: [\r\n      \"They don’t get affected\",\r\n      \"They need more food\",\r\n      \"They can die\",\r\n      \"They can get dizzy\"\r\n    ],\r\n    correct: \"They can die\",\r\n    questionId: \"839754\"\r\n  },\r\n  {\r\n    question: \"Which is the best way to transport for the nature? \",\r\n    answers: [\r\n      \"Drive electric vehicles\",\r\n      \"Walk or take the bike\",\r\n      \"Fly with airplanes\",\r\n      \"Ride the buss\"\r\n    ],\r\n    correct: \"Walk or take the bike\",\r\n    questionId: \"98390\"\r\n  }\r\n];\r\n\r\nexport default (n = 5) =>\r\n  Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));\r\n","import React, { useState } from \"react\";\r\n\r\nconst QuestionBox = ({ question, options, selected }) => {\r\n  const [answer, setAnswer] = useState(options);\r\n  return (\r\n    <div className=\"questionBox\">\r\n      <div className=\"question\">{question}</div>\r\n      {answer.map((text, index) => (\r\n        <button\r\n          key={index}\r\n          className=\"answerBtn\"\r\n          onClick={() => {\r\n            setAnswer([text]);\r\n            selected(text);\r\n          }}\r\n        >\r\n          {text}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBox;\r\n","import React from \"react\";\r\n\r\nconst Result = ({ score, playAgain }) => (\r\n  <div className=\"score-board\">\r\n    <div className=\"score\">You scored {score} / 5 correct answers!</div>\r\n    <button className=\"playBtn\" onClick={playAgain}>\r\n      Play again!\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Result;\r\n","import React, { Component } from \"react\";\r\nimport \"./assets/style.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport quizService from \"./quizService\";\r\nimport QuestionBox from \"./Components/QuestionBox\";\r\nimport Result from \"./Components/Result\";\r\n\r\nclass Quiz extends Component {\r\n  state = {\r\n    questionBank: [],\r\n    score: 0,\r\n    responses: 0\r\n  };\r\n  getQuestions = () => {\r\n    quizService().then(question => {\r\n      this.setState({\r\n        questionBank: question\r\n      });\r\n    });\r\n  };\r\n  computeAnswer = (answer, correctAnswer) => {\r\n    if (answer === correctAnswer) {\r\n      this.setState({\r\n        score: this.state.score + 1\r\n      });\r\n    }\r\n    this.setState({\r\n      responses: this.state.responses < 5 ? this.state.responses + 1 : 5\r\n    });\r\n  };\r\n  playAgain = () => {\r\n    /*this.getQuestions();*/\r\n    this.setState({\r\n      score: 0,\r\n      responses: 0\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Quiz-section\">\r\n        <div className=\"containers\">\r\n          <div className=\"title\">Quiz</div>\r\n          {this.state.questionBank.length > 0 &&\r\n            this.state.responses < 5 &&\r\n            this.state.questionBank.map(\r\n              ({ question, answers, correct, questionID }) => (\r\n                <QuestionBox\r\n                  question={question}\r\n                  options={answers}\r\n                  key={questionID}\r\n                  selected={answer => this.computeAnswer(answer, correct)}\r\n                />\r\n              )\r\n            )}\r\n\r\n          {this.state.responses === 5 ? (\r\n            <Result score={this.state.score} playAgain={this.playAgain} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Quiz;\r\n\r\nReactDOM.render(<Quiz />, document.getElementById(\"root\"));\r\n","import React, { Component } from \"react\";\r\nimport Quiz from \"./Quiz\";\r\n\r\nclass StartQuizButton extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showMe: false\r\n    };\r\n  }\r\n  operation() {\r\n    this.setState({\r\n      showMe: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Quiz-section2\">\r\n        <h2 className=\"quizheading\">Test your knowledge in a quiz</h2>\r\n        {this.state.showMe ? (\r\n          <div>\r\n            <Quiz />\r\n          </div>\r\n        ) : null}\r\n\r\n        <button className=\"startbutton\" onClick={() => this.operation()}>\r\n          Start\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartQuizButton;\r\n","import React, { Component } from \"react\";\nimport Navbar from \"./Components/Navbar\";\nimport Home from \"./sections/Home\";\nimport GlobalWarming from \"./sections/GlobalWarming\";\nimport GlacierSize from \"./sections/GlacierSize\";\nimport CO2Emission from \"./sections/CO2Emission\";\nimport StartQuizButton from \"./StartQuizButton\";\n//import Quiz from \"./Quiz\";\nimport \"./assets/style.css\";\nimport \"./App.css\";\nimport \"./CO2button.css\";\n\nclass App extends Component {\n  state = {};\n\n  constructor() {\n    super();\n    this.state = {\n      showMe: false\n    };\n  }\n  operation() {\n    this.setState({\n      showMe: true\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Home />\n        <GlobalWarming />\n        <GlacierSize />\n        <CO2Emission />\n        <StartQuizButton />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}